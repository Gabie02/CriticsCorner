# Generated by Django 4.1.7 on 2023-05-09 15:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imdb_id', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('plot', models.TextField()),
                ('director', models.CharField(max_length=100)),
                ('writer', models.CharField(max_length=100)),
                ('duration', models.PositiveIntegerField()),
                ('poster_url', models.URLField()),
                ('genres', models.CharField(max_length=100)),
                ('avg_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings_received', to='review.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('comment', models.TextField(blank=True, max_length=450, null=True)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reviewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.CharField(max_length=100)),
                ('likes', models.ManyToManyField(related_name='liked_by', through='review.Like', to='review.review')),
                ('reviews', models.ManyToManyField(related_name='rated_by', through='review.Rating', to='review.review')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('movies', models.ManyToManyField(to='review.movie')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.reviewer')),
            ],
        ),
        migrations.AddField(
            model_name='review',
            name='likes',
            field=models.ManyToManyField(related_name='liked_reviews', to='review.reviewer'),
        ),
        migrations.AddField(
            model_name='review',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to='review.movie'),
        ),
        migrations.AddField(
            model_name='review',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to='review.reviewer'),
        ),
        migrations.AddField(
            model_name='rating',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings_received', to='review.review'),
        ),
        migrations.AddField(
            model_name='rating',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings_given', to='review.reviewer'),
        ),
        migrations.AddField(
            model_name='movie',
            name='watchlists',
            field=models.ManyToManyField(to='review.watchlist'),
        ),
        migrations.AddField(
            model_name='like',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_received', to='review.review'),
        ),
        migrations.AddField(
            model_name='like',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_given', to='review.reviewer'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('reviewer', 'movie')},
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('reviewer', 'movie')},
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('reviewer', 'review')},
        ),
    ]
